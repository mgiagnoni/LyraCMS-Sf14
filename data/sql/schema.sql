CREATE TABLE articles (ctype_id INT NOT NULL, params LONGTEXT, id INT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, subtitle VARCHAR(255), summary LONGTEXT, content LONGTEXT, meta_title VARCHAR(255), meta_descr TEXT, meta_keys TEXT, meta_robots VARCHAR(255), is_active TINYINT(1) DEFAULT '0' NOT NULL, is_featured TINYINT(1) DEFAULT '0' NOT NULL, is_sticky TINYINT(1) DEFAULT '0' NOT NULL, publish_start DATETIME, publish_end DATETIME, status TINYINT DEFAULT 0 NOT NULL, created_by INT, updated_by INT, locked_by INT, num_comments INT DEFAULT 0 NOT NULL, num_active_comments INT DEFAULT 0 NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), UNIQUE INDEX article_slug_idx (slug), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), INDEX ctype_id_idx (ctype_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE article_label (article_id INT, label_id INT, PRIMARY KEY(article_id, label_id)) ENGINE = INNODB;
CREATE TABLE catalogs (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, description TEXT, is_active TINYINT(1) DEFAULT '0' NOT NULL, locked_by INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE comments (id INT AUTO_INCREMENT, article_id INT, author_name VARCHAR(255) NOT NULL, author_email VARCHAR(255), author_url VARCHAR(255), content TEXT NOT NULL, is_active TINYINT(1) DEFAULT '0' NOT NULL, created_by INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX article_id_idx (article_id), INDEX created_by_idx (created_by), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE lyra_content (id BIGINT AUTO_INCREMENT, ctype_id INT NOT NULL, params LONGTEXT, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE content_types (id INT AUTO_INCREMENT, type VARCHAR(80) NOT NULL UNIQUE, name VARCHAR(255) NOT NULL, description TEXT, model VARCHAR(255), module VARCHAR(255), plugin VARCHAR(255), is_active TINYINT(1) DEFAULT '0' NOT NULL, params LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE content_type_catalog (ctype_id INT, catalog_id INT, PRIMARY KEY(ctype_id, catalog_id)) ENGINE = INNODB;
CREATE TABLE labels (id INT AUTO_INCREMENT, catalog_id INT, name VARCHAR(255) NOT NULL, title VARCHAR(255), description TEXT, meta_title VARCHAR(255), meta_robots VARCHAR(255), meta_descr TEXT, meta_keys TEXT, is_active TINYINT(1) DEFAULT '0' NOT NULL, created_by INT, updated_by INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, slug VARCHAR(255), root_id BIGINT, lft INT, rgt INT, level SMALLINT, UNIQUE INDEX labels_sluggable_idx (slug), INDEX catalog_id_idx (catalog_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE settings (id INT AUTO_INCREMENT, params LONGTEXT, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE users (id INT AUTO_INCREMENT, user_id INT, first_name VARCHAR(80), last_name VARCHAR(80), email VARCHAR(150), INDEX user_id_idx (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE articles ADD CONSTRAINT articles_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE articles ADD CONSTRAINT articles_ctype_id_content_types_id FOREIGN KEY (ctype_id) REFERENCES content_types(id) ON DELETE CASCADE;
ALTER TABLE articles ADD CONSTRAINT articles_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE article_label ADD CONSTRAINT article_label_label_id_labels_id FOREIGN KEY (label_id) REFERENCES labels(id) ON DELETE CASCADE;
ALTER TABLE article_label ADD CONSTRAINT article_label_article_id_articles_id FOREIGN KEY (article_id) REFERENCES articles(id) ON DELETE CASCADE;
ALTER TABLE comments ADD CONSTRAINT comments_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE comments ADD CONSTRAINT comments_article_id_articles_id FOREIGN KEY (article_id) REFERENCES articles(id) ON DELETE CASCADE;
ALTER TABLE content_type_catalog ADD CONSTRAINT content_type_catalog_ctype_id_content_types_id FOREIGN KEY (ctype_id) REFERENCES content_types(id) ON DELETE CASCADE;
ALTER TABLE content_type_catalog ADD CONSTRAINT content_type_catalog_catalog_id_catalogs_id FOREIGN KEY (catalog_id) REFERENCES catalogs(id) ON DELETE CASCADE;
ALTER TABLE labels ADD CONSTRAINT labels_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE labels ADD CONSTRAINT labels_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE labels ADD CONSTRAINT labels_catalog_id_catalogs_id FOREIGN KEY (catalog_id) REFERENCES catalogs(id) ON DELETE CASCADE;
ALTER TABLE users ADD CONSTRAINT users_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
