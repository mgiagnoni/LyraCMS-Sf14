<?php

/**
 * BaseLyraComponentVisibility
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $component_id
 * @property integer $region_id
 * @property string $content
 * @property LyraComponent $LyraComponent
 * 
 * @method integer                 getComponentId()   Returns the current record's "component_id" value
 * @method integer                 getRegionId()      Returns the current record's "region_id" value
 * @method string                  getContent()       Returns the current record's "content" value
 * @method LyraComponent           getLyraComponent() Returns the current record's "LyraComponent" value
 * @method LyraComponentVisibility setComponentId()   Sets the current record's "component_id" value
 * @method LyraComponentVisibility setRegionId()      Sets the current record's "region_id" value
 * @method LyraComponentVisibility setContent()       Sets the current record's "content" value
 * @method LyraComponentVisibility setLyraComponent() Sets the current record's "LyraComponent" value
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLyraComponentVisibility extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('component_visibility');
        $this->hasColumn('component_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('region_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('content', 'string', 120, array(
             'type' => 'string',
             'length' => 120,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LyraComponent', array(
             'local' => 'component_id',
             'foreign' => 'id'));
    }
}