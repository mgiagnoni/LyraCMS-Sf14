<?php

/**
 * BaseLyraContentType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property string $db_name
 * @property string $module
 * @property boolean $is_active
 * @property Doctrine_Collection $ContentTypeCatalogs
 * @property Doctrine_Collection $Contents
 * @property Doctrine_Collection $LyraContentTypeCatalog
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method string              getDescription()            Returns the current record's "description" value
 * @method string              getDbName()                 Returns the current record's "db_name" value
 * @method string              getModule()                 Returns the current record's "module" value
 * @method boolean             getIsActive()               Returns the current record's "is_active" value
 * @method Doctrine_Collection getContentTypeCatalogs()    Returns the current record's "ContentTypeCatalogs" collection
 * @method Doctrine_Collection getContents()               Returns the current record's "Contents" collection
 * @method Doctrine_Collection getLyraContentTypeCatalog() Returns the current record's "LyraContentTypeCatalog" collection
 * @method LyraContentType     setId()                     Sets the current record's "id" value
 * @method LyraContentType     setName()                   Sets the current record's "name" value
 * @method LyraContentType     setDescription()            Sets the current record's "description" value
 * @method LyraContentType     setDbName()                 Sets the current record's "db_name" value
 * @method LyraContentType     setModule()                 Sets the current record's "module" value
 * @method LyraContentType     setIsActive()               Sets the current record's "is_active" value
 * @method LyraContentType     setContentTypeCatalogs()    Sets the current record's "ContentTypeCatalogs" collection
 * @method LyraContentType     setContents()               Sets the current record's "Contents" collection
 * @method LyraContentType     setLyraContentTypeCatalog() Sets the current record's "LyraContentTypeCatalog" collection
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseLyraContentType extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content_types');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => '4000',
             ));
        $this->hasColumn('db_name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('module', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('LyraCatalog as ContentTypeCatalogs', array(
             'refClass' => 'LyraContentTypeCatalog',
             'local' => 'ctype_id',
             'foreign' => 'catalog_id'));

        $this->hasMany('LyraArticle as Contents', array(
             'local' => 'id',
             'foreign' => 'ctype_id'));

        $this->hasMany('LyraContentTypeCatalog', array(
             'local' => 'id',
             'foreign' => 'ctype_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}