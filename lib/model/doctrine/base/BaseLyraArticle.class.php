<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseLyraArticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('articles');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('subtitle', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('summary', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('meta_title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('meta_descr', 'string', 500, array(
             'type' => 'string',
             'length' => '500',
             ));
        $this->hasColumn('meta_keys', 'string', 500, array(
             'type' => 'string',
             'length' => '500',
             ));
        $this->hasColumn('meta_robots', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_sticky', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('publish_start', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('publish_end', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => '1',
             ));
        $this->hasColumn('options', 'clob', 65532, array(
             'type' => 'clob',
             'length' => '65532',
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('locked_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        $this->hasMany('LyraLabel as ArticleLabels', array(
             'refClass' => 'LyraArticleLabel',
             'local' => 'article_id',
             'foreign' => 'label_id'));

        $this->hasMany('LyraComment as ArticleComments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('LyraArticleLabel', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             'unique' => true,
             'indexName' => 'article_slug',
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}