<?php

/**
 * BaseLyraArticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $subtitle
 * @property clob $summary
 * @property clob $content
 * @property string $meta_title
 * @property string $meta_descr
 * @property string $meta_keys
 * @property string $meta_robots
 * @property boolean $is_active
 * @property boolean $is_featured
 * @property boolean $is_sticky
 * @property timestamp $publish_start
 * @property timestamp $publish_end
 * @property integer $status
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $locked_by
 * @property integer $num_comments
 * @property integer $num_active_comments
 * @property Doctrine_Collection $ArticleLabels
 * @property sfGuardUser $ArticleCreatedBy
 * @property sfGuardUser $ArticleUpdatedBy
 * @property LyraContentType $ArticleContentType
 * @property Doctrine_Collection $ArticleComments
 * @property Doctrine_Collection $LyraArticleLabel
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getTitle()               Returns the current record's "title" value
 * @method string              getSubtitle()            Returns the current record's "subtitle" value
 * @method clob                getSummary()             Returns the current record's "summary" value
 * @method clob                getContent()             Returns the current record's "content" value
 * @method string              getMetaTitle()           Returns the current record's "meta_title" value
 * @method string              getMetaDescr()           Returns the current record's "meta_descr" value
 * @method string              getMetaKeys()            Returns the current record's "meta_keys" value
 * @method string              getMetaRobots()          Returns the current record's "meta_robots" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method boolean             getIsFeatured()          Returns the current record's "is_featured" value
 * @method boolean             getIsSticky()            Returns the current record's "is_sticky" value
 * @method timestamp           getPublishStart()        Returns the current record's "publish_start" value
 * @method timestamp           getPublishEnd()          Returns the current record's "publish_end" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method integer             getCreatedBy()           Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()           Returns the current record's "updated_by" value
 * @method integer             getLockedBy()            Returns the current record's "locked_by" value
 * @method integer             getNumComments()         Returns the current record's "num_comments" value
 * @method integer             getNumActiveComments()   Returns the current record's "num_active_comments" value
 * @method Doctrine_Collection getArticleLabels()       Returns the current record's "ArticleLabels" collection
 * @method sfGuardUser         getArticleCreatedBy()    Returns the current record's "ArticleCreatedBy" value
 * @method sfGuardUser         getArticleUpdatedBy()    Returns the current record's "ArticleUpdatedBy" value
 * @method LyraContentType     getArticleContentType()  Returns the current record's "ArticleContentType" value
 * @method Doctrine_Collection getArticleComments()     Returns the current record's "ArticleComments" collection
 * @method Doctrine_Collection getLyraArticleLabel()    Returns the current record's "LyraArticleLabel" collection
 * @method LyraArticle         setId()                  Sets the current record's "id" value
 * @method LyraArticle         setTitle()               Sets the current record's "title" value
 * @method LyraArticle         setSubtitle()            Sets the current record's "subtitle" value
 * @method LyraArticle         setSummary()             Sets the current record's "summary" value
 * @method LyraArticle         setContent()             Sets the current record's "content" value
 * @method LyraArticle         setMetaTitle()           Sets the current record's "meta_title" value
 * @method LyraArticle         setMetaDescr()           Sets the current record's "meta_descr" value
 * @method LyraArticle         setMetaKeys()            Sets the current record's "meta_keys" value
 * @method LyraArticle         setMetaRobots()          Sets the current record's "meta_robots" value
 * @method LyraArticle         setIsActive()            Sets the current record's "is_active" value
 * @method LyraArticle         setIsFeatured()          Sets the current record's "is_featured" value
 * @method LyraArticle         setIsSticky()            Sets the current record's "is_sticky" value
 * @method LyraArticle         setPublishStart()        Sets the current record's "publish_start" value
 * @method LyraArticle         setPublishEnd()          Sets the current record's "publish_end" value
 * @method LyraArticle         setStatus()              Sets the current record's "status" value
 * @method LyraArticle         setCreatedBy()           Sets the current record's "created_by" value
 * @method LyraArticle         setUpdatedBy()           Sets the current record's "updated_by" value
 * @method LyraArticle         setLockedBy()            Sets the current record's "locked_by" value
 * @method LyraArticle         setNumComments()         Sets the current record's "num_comments" value
 * @method LyraArticle         setNumActiveComments()   Sets the current record's "num_active_comments" value
 * @method LyraArticle         setArticleLabels()       Sets the current record's "ArticleLabels" collection
 * @method LyraArticle         setArticleCreatedBy()    Sets the current record's "ArticleCreatedBy" value
 * @method LyraArticle         setArticleUpdatedBy()    Sets the current record's "ArticleUpdatedBy" value
 * @method LyraArticle         setArticleContentType()  Sets the current record's "ArticleContentType" value
 * @method LyraArticle         setArticleComments()     Sets the current record's "ArticleComments" collection
 * @method LyraArticle         setLyraArticleLabel()    Sets the current record's "LyraArticleLabel" collection
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLyraArticle extends LyraContent
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('articles');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('subtitle', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('summary', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('content', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('meta_title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('meta_descr', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('meta_keys', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('meta_robots', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_featured', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('is_sticky', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('publish_start', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('publish_end', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('locked_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('num_comments', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('num_active_comments', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('LyraLabel as ArticleLabels', array(
             'refClass' => 'LyraArticleLabel',
             'local' => 'article_id',
             'foreign' => 'label_id'));

        $this->hasOne('sfGuardUser as ArticleCreatedBy', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as ArticleUpdatedBy', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $this->hasOne('LyraContentType as ArticleContentType', array(
             'local' => 'ctype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('LyraComment as ArticleComments', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $this->hasMany('LyraArticleLabel', array(
             'local' => 'id',
             'foreign' => 'article_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'canUpdate' => true,
             'unique' => true,
             'indexName' => 'article_slug',
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}