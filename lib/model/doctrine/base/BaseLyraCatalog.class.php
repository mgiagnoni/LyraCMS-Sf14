<?php

/**
 * BaseLyraCatalog
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property boolean $is_active
 * @property integer $locked_by
 * @property Doctrine_Collection $CatalogContentTypes
 * @property Doctrine_Collection $CatalogLabels
 * @property Doctrine_Collection $LyraContentTypeCatalog
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method string              getDescription()            Returns the current record's "description" value
 * @method boolean             getIsActive()               Returns the current record's "is_active" value
 * @method integer             getLockedBy()               Returns the current record's "locked_by" value
 * @method Doctrine_Collection getCatalogContentTypes()    Returns the current record's "CatalogContentTypes" collection
 * @method Doctrine_Collection getCatalogLabels()          Returns the current record's "CatalogLabels" collection
 * @method Doctrine_Collection getLyraContentTypeCatalog() Returns the current record's "LyraContentTypeCatalog" collection
 * @method LyraCatalog         setId()                     Sets the current record's "id" value
 * @method LyraCatalog         setName()                   Sets the current record's "name" value
 * @method LyraCatalog         setDescription()            Sets the current record's "description" value
 * @method LyraCatalog         setIsActive()               Sets the current record's "is_active" value
 * @method LyraCatalog         setLockedBy()               Sets the current record's "locked_by" value
 * @method LyraCatalog         setCatalogContentTypes()    Sets the current record's "CatalogContentTypes" collection
 * @method LyraCatalog         setCatalogLabels()          Sets the current record's "CatalogLabels" collection
 * @method LyraCatalog         setLyraContentTypeCatalog() Sets the current record's "LyraContentTypeCatalog" collection
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLyraCatalog extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('catalogs');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('locked_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('LyraContentType as CatalogContentTypes', array(
             'refClass' => 'LyraContentTypeCatalog',
             'local' => 'catalog_id',
             'foreign' => 'ctype_id'));

        $this->hasMany('LyraLabel as CatalogLabels', array(
             'local' => 'id',
             'foreign' => 'catalog_id'));

        $this->hasMany('LyraContentTypeCatalog', array(
             'local' => 'id',
             'foreign' => 'catalog_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}