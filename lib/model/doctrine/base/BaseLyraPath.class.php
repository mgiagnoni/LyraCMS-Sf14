<?php

/**
 * BaseLyraPath
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $content_id
 * @property integer $ctype_id
 * @property string $path
 * @property string $pattern
 * @property boolean $is_active
 * @property LyraContentType $PathContentType
 * 
 * @method integer         getId()              Returns the current record's "id" value
 * @method integer         getContentId()       Returns the current record's "content_id" value
 * @method integer         getCtypeId()         Returns the current record's "ctype_id" value
 * @method string          getPath()            Returns the current record's "path" value
 * @method string          getPattern()         Returns the current record's "pattern" value
 * @method boolean         getIsActive()        Returns the current record's "is_active" value
 * @method LyraContentType getPathContentType() Returns the current record's "PathContentType" value
 * @method LyraPath        setId()              Sets the current record's "id" value
 * @method LyraPath        setContentId()       Sets the current record's "content_id" value
 * @method LyraPath        setCtypeId()         Sets the current record's "ctype_id" value
 * @method LyraPath        setPath()            Sets the current record's "path" value
 * @method LyraPath        setPattern()         Sets the current record's "pattern" value
 * @method LyraPath        setIsActive()        Sets the current record's "is_active" value
 * @method LyraPath        setPathContentType() Sets the current record's "PathContentType" value
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLyraPath extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paths');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('content_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('ctype_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('path', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pattern', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));


        $this->index('path_index', array(
             'fields' => 
             array(
              0 => 'path',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LyraContentType as PathContentType', array(
             'local' => 'ctype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}