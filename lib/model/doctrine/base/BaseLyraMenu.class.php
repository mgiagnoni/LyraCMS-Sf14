<?php

/**
 * BaseLyraMenu
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $parent_id
 * @property string $type
 * @property integer $ctype_id
 * @property integer $element_id
 * @property string $name
 * @property clob $params
 * @property LyraMenu $MenuParent
 * @property LyraContentType $MenuContentType
 * @property LyraArticle $MenuContentItem
 * @property Doctrine_Collection $LyraMenu
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getParentId()        Returns the current record's "parent_id" value
 * @method string              getType()            Returns the current record's "type" value
 * @method integer             getCtypeId()         Returns the current record's "ctype_id" value
 * @method integer             getElementId()       Returns the current record's "element_id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method clob                getParams()          Returns the current record's "params" value
 * @method LyraMenu            getMenuParent()      Returns the current record's "MenuParent" value
 * @method LyraContentType     getMenuContentType() Returns the current record's "MenuContentType" value
 * @method LyraArticle         getMenuContentItem() Returns the current record's "MenuContentItem" value
 * @method Doctrine_Collection getLyraMenu()        Returns the current record's "LyraMenu" collection
 * @method LyraMenu            setId()              Sets the current record's "id" value
 * @method LyraMenu            setParentId()        Sets the current record's "parent_id" value
 * @method LyraMenu            setType()            Sets the current record's "type" value
 * @method LyraMenu            setCtypeId()         Sets the current record's "ctype_id" value
 * @method LyraMenu            setElementId()       Sets the current record's "element_id" value
 * @method LyraMenu            setName()            Sets the current record's "name" value
 * @method LyraMenu            setParams()          Sets the current record's "params" value
 * @method LyraMenu            setMenuParent()      Sets the current record's "MenuParent" value
 * @method LyraMenu            setMenuContentType() Sets the current record's "MenuContentType" value
 * @method LyraMenu            setMenuContentItem() Sets the current record's "MenuContentItem" value
 * @method LyraMenu            setLyraMenu()        Sets the current record's "LyraMenu" collection
 * 
 * @package    lyra
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLyraMenu extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('menus');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('type', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('ctype_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('element_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('params', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('LyraMenu as MenuParent', array(
             'local' => 'parent_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('LyraContentType as MenuContentType', array(
             'local' => 'ctype_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('LyraArticle as MenuContentItem', array(
             'local' => 'element_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('LyraMenu', array(
             'local' => 'id',
             'foreign' => 'parent_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($nestedset0);
    }
}